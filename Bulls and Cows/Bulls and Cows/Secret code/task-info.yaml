type: edu
files:
- name: src/bullscows/Main.java
  visible: true
  text: |
    package bullscows;

    public class Main {
        public static void main(String[] args) {
            System.out.println("Hello World!");
        }
    }
  learner_created: false
- name: test/BullsCowsTest.java
  visible: false
  text: |-
    import bullscows.Main;
    import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testing.TestedProgram;

    import java.util.ArrayList;
    import java.util.Arrays;
    import java.util.LinkedHashSet;
    import java.util.List;
    import java.util.stream.Collectors;

    import static org.hyperskill.hstest.testing.expect.Expectation.expect;

    public class BullsCowsTest extends StageTest<String> {

        // basic test case
        @DynamicTestingMethod
        CheckResult test1() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("4").toLowerCase().trim();

            return outputCheck(output, 4);
        }

        @DynamicTestingMethod
        CheckResult test2() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("1").toLowerCase().trim();

            return outputCheck(output, 1);
        }

        // test of incorrect input
        @DynamicTestingMethod
        CheckResult test4() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("11").toLowerCase().trim();

            return outputCheck(output, 11);
        }

        @DynamicTestingMethod
        CheckResult test5() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("6").toLowerCase().trim();

            return outputCheck(output, 6);
        }

        @DynamicTestingMethod
        CheckResult test6() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("3").toLowerCase().trim();

            return outputCheck(output, 3);
        }


        CheckResult outputCheck(String source, int length) {

            if (length > 10) {
                if (source.toLowerCase().contains("error")) {
                    return CheckResult.correct();
                } else {
                    return CheckResult.wrong("An error message expected with input " +
                            "\"" + length + "\"");
                }
            }

            List<Integer> integers = expect(source).toContain(1).integers();
            source = "" + integers.get(0);

            if (source.length() != length) {
                return CheckResult.wrong("The output number of your program has " +
                        "an incorrect length (found " + source.length() + ")");
            }

            List<Integer> temp = stringToArrayOfNumbers(source);
            temp = new ArrayList<>(new LinkedHashSet<>(temp));

            if (temp.toArray().length != source.length()) {
                return CheckResult.wrong("Digits in the generated number are not unique.");
            }

            return CheckResult.correct();
        }

        private static List<Integer> stringToArrayOfNumbers(String array) {
            return Arrays.stream(array.split(""))
                    .map(Integer::parseInt)
                    .collect(Collectors.toList());
        }
    }
  learner_created: false
- name: src/bullscows/Game.java
  visible: true
  text: |
    package bullscows;

    import java.util.Scanner;

    public class Game {

        int turn = 1;
        int turns = 2;

        int[] numbers = {1234, 9876};
        String[] grades = {"None.", "4 bulls."};

        public void begin() {
            System.out.println("The secret code is prepared: ****.");
        }

        public void start() {
            do {
                System.out.println("\n" + "Turn " + turn + ". Answer:");
                Scanner in = new Scanner(System.in);
                int number = numbers[turn - 1];
                System.out.println(number);
                System.out.println("Grade: " + grades[turn - 1]);
                turn++;
                turns--;
            } while (turns != 0);
            System.out.print("Congrats! The secret code is 9876.");
        }

    }
  learner_created: true
- name: src/bullscows/Grader.java
  visible: true
  text: |
    package bullscows;

    import java.util.Random;
    import java.util.Scanner;

    public class Grader {

        Random random = new Random();
        Integer code = 1000 + random.nextInt(8999);

        void graderStart(char[] code) {
            Scanner in = new Scanner(System.in);
            String s = in.nextLine();
            char[] input = s.toCharArray();
            int cow = 0;
            int bull = 0;

            for (int i = 0; i < code.length; i++) {
                if (input[i] == code[i]) {
                    bull++;
                }
            }

            for (int i = 0; i < input.length; i++) {
                for (int j = 0; j < code.length; j++) {
                    if (i != j) {
                        if (input[i] == code[j]) {
                            cow++;
                        }
                    }
                }
            }

            printInfo(code, cow, bull);

        }

        private void printInfo(char[] code, int cow, int bull) {
            if (cow == 0 && bull == 0){
                System.out.println("Grade: None. The secret code is " + showCode());
            } else if (cow > 0 && bull == 0){
                System.out.println("Grade: " + cow + " cow(s). The secret code is " + showCode());
            } else if(cow == 0 && bull > 0){
                System.out.println("Grade: " + bull + " bull(s). The secret code is " + showCode());
            } else {
                System.out.println("Grade: " + bull + " bull(s) and " + cow + " cow(s). The secret code is " +showCode());
            }
        }

        public char[] split() {
            return this.code.toString().toCharArray();
        }

        int showCode() {
            return this.code;
        }
    }
  learner_created: true
- name: src/bullscows/Generator.java
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/53/stages/289/implement#comment
status: Unchecked
record: -1
