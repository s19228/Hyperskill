/**
 * @author Gryka Konrad S19228
 */

package Zad2;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

class Cre1 {

    static public void main(String[] args) throws SQLException {
        new Cre1();
    }

    Statement stmt;
    Connection con;
    String driverName = "org.apache.derby.jdbc.EmbeddedDriver";
    String url = "jdbc:derby:C:/DerbyDbs/ksidb";

    Cre1() throws SQLException {
        try {
            Class.forName(driverName);
            con = DriverManager.getConnection(url);

        } catch (Exception exc) {
            System.out.println(exc);
            System.exit(1);
        }

        // metoda dropTable jest naszą własną metodą napisaną dla skrócenia programu
        // usuwa ona tabelę podaną jako argument
        // Aby w każdych okolicznościach stworzyć nową tabelę AUTOR
        // musimy usunąć ew.  już istniejącą tabelę AUTOR
        dropTable("POZYCJE"); // usunięcie tabeli pochodnej, będącej w relacji z tabelą AUTOR
        dropTable("AUTOR");   // usunięcie tabeli AUTOR

        String crestmt = "CREATE TABLE AUTOR (AUTID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY, NAME VARCHAR(255) NOT NULL, PRIMARY KEY(AUTID))";


        try {
            // wykonanie polecenia zapisanego w crestmt
            stmt = con.createStatement();
            stmt.execute(crestmt);

        } catch (SQLException exc) {                      // przechwycenie wyjątku:
            System.out.println("SQL except.: " + exc.getMessage());
            System.out.println("SQL state  : " + exc.getSQLState());
            System.out.println("Vendor errc: " + exc.getErrorCode());
            System.exit(1);
        } finally {
            try {
                stmt.close();
                con.close();
            } catch (SQLException exc) {
                System.out.println(exc);
                System.exit(1);
            }
        }
    }

    private void dropTable(String tname) throws SQLException {
        Statement stat = con.createStatement();
        stat.execute("DROP TABLE " + tname);
    }
}

/**
 * po wykonaniu programu wynik z ji:
 * <p>
 * wersja ij 10.14
 * ij> connect 'jdbc:derby:ksidb;create=false';
 * ij> select * from autor;
 * AUTID      |NAME
 * --------------------------------------------------------------------------------------------------------------------------------------------
 * <p>
 * 0 wierszy wybranych
 * ij> select * from pozycje;
 * BúąD 42X05: Tabela/widok 'POZYCJE' nie istnieje.
 * ij>
 */

/*
Z dodatkowego polecenia otrzymałem poniższy wynik:

Exception in thread "main" java.sql.SQLException: Operacja 'DROP CONSTRAINT' nie może być wykonana na obiekcie 'SQL200625213302270',
ponieważ instrukcja CONSTRAINT 'SQL200625213302441' jest zależna od tego obiektu.

 */